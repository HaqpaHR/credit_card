{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","state","cardNumber","expired","cvc","typeOfCard","cardNumberHandler","event","reg","RegExp","target","value","replace","trim","test","length","setState","expiredHandler","clearValue","makeNumber","slice","expirationDate","cvcHandler","match","clearHandler","preventDefault","className","onSubmit","this","htmlFor","type","id","name","required","placeholder","onChange","src","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2342b1b.chunk.js","sourcesContent":["import React,{ChangeEvent,FormEvent} from \"react\";\nimport './App.scss';\n\ntype State = {\n  cardNumber: string,\n  expired: string,\n  cvc: string,\n  typeOfCard: string,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    cardNumber: '',\n    expired: '',\n    cvc: '',\n    typeOfCard: '',\n  }\n\n  cardNumberHandler = (event: ChangeEvent<HTMLInputElement>) => {\n      const reg = new RegExp('^[0-9 ]*$')\n      event.target.value = event.target.value.replace(/\\s/g, '').replace(/(\\d{4})/g, '$1 ').trim();\n\n      if (reg.test(event.target.value) && this.state.cardNumber.length <=18) {\n        this.setState({\n          cardNumber: event.target.value,\n        })\n      }\n\n      if (this.state.cardNumber[0] === '4' && this.state.cardNumber[1] === '9') {\n        this.setState(state => ({\n          ...state,\n          typeOfCard: 'https://logosklad.ru/photo/logos/290/1494134204.jpg#.YaY4hnOwdhg.link',\n        }))\n      }\n      if (this.state.cardNumber[0] === '5' && this.state.cardNumber[1] === '1') {\n        this.setState(state => ({\n          ...state,\n          typeOfCard: 'https://logosklad.ru/photo/logos/520/1468563734.jpg#.YaZb9vMkDIw.link',\n        }))\n      }\n\n  };\n\n    expiredHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n      function makeNumber(val = \"\") {\n        return val.replace(/\\D+/g, \"\");\n      }\n\n      function expirationDate(value: string) {\n        const clearValue = makeNumber(value);\n        if(clearValue.length >= 3) {\n          return `${clearValue.slice(0, 2)}/${clearValue.slice(2, 4)}`\n        }\n        return clearValue;\n      }\n\n      this.setState({\n        expired: expirationDate(value),\n      })\n  };\n\n  cvcHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    const reg = new RegExp('^[0-9]*$');\n\n    if(value.match(reg) && this.state.cvc.length <= 2) {\n      this.setState({\n        cvc: value,\n      })\n    }\n  }\n\n  clearHandler = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({\n      cardNumber: '',\n      expired: '',\n      cvc: '',\n      typeOfCard: '',\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <p>Pay with your credit card via PayPal Website Payments Pro.</p>\n        <form\n          className=\"input\"\n          onSubmit={this.clearHandler}\n        >\n          <label className=\"input__label\" htmlFor='input-cardNumber'>\n            Card Number:\n          </label>\n            <input\n                className=\"input input__label--numCard\"\n                type='text'\n                id=\"input-cardNumber\"\n                name=\"cardNumber\"\n                required\n                placeholder=\"•••• •••• •••• ••••\"\n                value={this.state.cardNumber}\n                onChange={this.cardNumberHandler}\n            />\n\n          { this.state.typeOfCard &&(\n              <div className=\"image\"><img src={`${this.state.typeOfCard}`} className=\"picture\" /></div>\n          )}\n          <div className=\"input__bottom\">\n            <div className=\"input__bottom-container\">\n              <label className=\"input__label\" htmlFor='input-expired'>\n                Expiry (MM/YY):\n              </label>\n                <input\n                    className=\"input input__label--expired\"\n                    type='string'\n                    id=\"input-expired\"\n                    name=\"expired\"\n                    placeholder=\"MM/YY\"\n                    required\n                    value={this.state.expired}\n                    onChange={this.expiredHandler}\n                />\n            </div>\n            <div className=\"input__bottom-container\">\n              <label className=\"input__label\" htmlFor='input-cvc'>\n                Card Code:\n              </label>\n                <input\n                    className=\"input input__label--cvc\"\n                    type='string'\n                    id=\"input-cvc\"\n                    name=\"cvc\"\n                    required\n                    placeholder=\"CVC\"\n                    value={this.state.cvc}\n                    onChange={this.cvcHandler}\n                />\n            </div>\n          </div>\n          <button\n              className=\"button\"\n              type=\"submit\"\n          >\n            Clear\n          </button>\n        </form>\n      </div>\n    )\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}